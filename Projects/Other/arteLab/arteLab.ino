/*********************************************************************
This is an example for our Monochrome OLEDs based on SSD1306 drivers

  Pick one up today in the adafruit shop!
  ------> http://www.adafruit.com/category/63_98

This example is for a 128x32 size display using I2C to communicate
3 pins are required to interface (2 I2C and one reset)

Adafruit invests time and resources providing this open source code, 
please support Adafruit and open-source hardware by purchasing 
products from Adafruit!

Written by Limor Fried/Ladyada  for Adafruit Industries.  
BSD license, check license.txt for more information
All text above, and the splash screen must be included in any redistribution
*********************************************************************/

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define OLED_RESET 4
Adafruit_SSD1306 display(OLED_RESET);

static const unsigned char PROGMEM arte_logo_128_32[] =
{
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ################################################################################################################################
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x08, 0x1E, 0x1F, 0x8F, 0xCF, 0xC7, 0xE0, 0xE1, 0x04, 0x61, 0x10, 0x30, 0x00, 0x01, // #                   #      ####    ######   ######  ######   ######     ###    #     #   ##    #   #      ##                   #
  0x80, 0x00, 0x1C, 0x3F, 0xBF, 0xDF, 0xDF, 0xEF, 0xE3, 0xF1, 0x86, 0x61, 0x98, 0xFC, 0x00, 0x01, // #                  ###    ####### ######## ####### ######## #######   ######   ##    ##  ##    ##  ##   ######                 #
  0x80, 0x00, 0x1C, 0x30, 0xC6, 0x18, 0x03, 0x0C, 0x06, 0x19, 0x86, 0x71, 0x99, 0x86, 0x00, 0x01, // #                  ###    ##    ##   ##    ##         ##    ##       ##    ##  ##    ##  ###   ##  ##  ##    ##                #
  0x80, 0x00, 0x36, 0x30, 0xC6, 0x18, 0x03, 0x0C, 0x06, 0x19, 0x86, 0x79, 0x99, 0x86, 0x00, 0x01, // #                 ## ##   ##    ##   ##    ##         ##    ##       ##    ##  ##    ##  ####  ##  ##  ##    ##                #
  0x80, 0x00, 0x36, 0x3F, 0x86, 0x1F, 0xC3, 0x0F, 0xE6, 0x01, 0xFE, 0x79, 0x99, 0x80, 0x00, 0x01, // #                 ## ##   #######    ##    #######    ##    #######  ##        ########  ####  ##  ##  ##                      #
  0x80, 0x00, 0x66, 0x3F, 0x06, 0x1F, 0xC3, 0x0F, 0xE6, 0x01, 0xFE, 0x6D, 0x99, 0x80, 0x00, 0x01, // #                ##  ##   ######     ##    #######    ##    #######  ##        ########  ## ## ##  ##  ##                      #
  0x80, 0x00, 0x7F, 0x33, 0x06, 0x18, 0x03, 0x0C, 0x06, 0x19, 0x86, 0x67, 0x99, 0x86, 0x00, 0x01, // #                #######  ##  ##     ##    ##         ##    ##       ##    ##  ##    ##  ##  ####  ##  ##    ##                #
  0x80, 0x00, 0xFF, 0x31, 0x86, 0x18, 0x03, 0x0C, 0x06, 0x19, 0x86, 0x67, 0x99, 0x86, 0x00, 0x01, // #               ########  ##   ##    ##    ##         ##    ##       ##    ##  ##    ##  ##  ####  ##  ##    ##                #
  0x80, 0x00, 0xC1, 0xB0, 0xC6, 0x1F, 0xC3, 0x0F, 0xE3, 0xF1, 0x86, 0x63, 0x98, 0xFC, 0x00, 0x01, // #               ##     ## ##    ##   ##    #######    ##    #######   ######   ##    ##  ##   ###  ##   ######                 #
  0x80, 0x00, 0xC1, 0xB0, 0xC6, 0x1F, 0xC3, 0x07, 0xE1, 0xE1, 0x86, 0x41, 0x98, 0x78, 0x00, 0x01, // #               ##     ## ##    ##   ##    #######    ##     ######    ####    ##    ##  #     ##  ##    ####                  #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, // #                                                                                                                              #
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // ################################################################################################################################
};

#if (SSD1306_LCDHEIGHT != 32)
#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif

int place = 0;
int started = 0;

char a;

/*
This arrays are 1 char larger, because they should
have also place for the terminating \0 for atoi method.
*/
char serialReadString[36]; //

void setup()   {                
  Serial.begin(9600);

  // by default, we'll generate the high voltage from the 3.3v line internally! (neat!)
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // initialize with the I2C addr 0x3C (for the 128x32)
  // init done

  // Clear the buffer.
  display.clearDisplay();

  // miniature bitmap display
  display.clearDisplay();
  display.drawBitmap(0, 0, arte_logo_128_32, 128, 32, 1);
  display.display();
  delay(2000);

  // text display tests
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,0);
  display.println("Initialized.");
  display.display();
  delay(1000);
}

void loop() {
  /*
  The message looks like this:
  SxxxxxxxxxxxxxxxxxxxxxxxxxxE
  */
  /* Check the incomming message */
  while(Serial.available()) {
    a = Serial.read();
    if(a == 'E' && started == 1){ // end of the command.
      place = 0; // reset the place in the array.
      printOnLCD(serialReadString);
      for (byte i = 0; i < 35; i++) {
        serialReadString[i] = ' ';
      }
      started = 0;
    } else {
      if (started == 1){ // the middle of the command.
        serialReadString[place] = a;
        place++; 
      }
    }
    if(a == 'S') { // beginning of the command.
      started = 1;
    }
  }
 delayMicroseconds(3);
}

void printOnLCD(char serialReadString[]){
  display.setCursor(0,0);
  display.clearDisplay();
  display.println(serialReadString);
  display.display();
}
